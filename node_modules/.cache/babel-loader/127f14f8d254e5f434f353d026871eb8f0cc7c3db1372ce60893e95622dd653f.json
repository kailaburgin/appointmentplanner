{"ast":null,"code":"var _jsxFileName = \"/Users/kailaburgin/Development/test/src/App.js\",\n  _s = $RefreshSig$();\nimport { getDefaultNormalizer } from \"@testing-library/react\";\nimport React, { useState } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n\n  //below is the state variable for contacts\n  const [contacts, setContacts] = useState([\n    // {\n    //   id: 1,\n    //   name: \"Bob Smith\",\n    //   phone: 5551234567,\n    //   email: \"bobsmith@gmail.com\",\n    // },\n    // {\n    //   id: 2,\n    //   name: \"Jane Doe\",\n    //   phone: 5552345678,\n    //   email: \"janedoe@gmail.com\",\n    // },\n    // {\n    //   id: 3,\n    //   name: \"John Test\",\n    //   phone: 5553456789,\n    //   email: \"johntest@gmail.com\",\n    // },\n  ]);\n\n  //below is the state variable for appointments\n  const [appointments, setAppointments] = useState([\n    // {\n    //   id: 1,\n    //   name: \"Bob Smith\",\n    //   phone: 5551234567,\n    //   email: \"bobsmith@gmail.com\",\n    //   date: \"03/18/3024\",\n    //   time: \"2:00p\",\n    // },\n    // {\n    //   id: 2,\n    //   name: \"Jane Doe\",\n    //   phone: 5552345678,\n    //   email: \"janedoe@gmail.com\",\n    //   date: \"03/20/3024\",\n    //   time: \"1:00p\",\n    // },\n    // {\n    //   id: 3,\n    //   name: \"John Test\",\n    //   phone: 5553456789,\n    //   email: \"johntest@gmail.com\",\n    //   date: \"03/22/3024\",\n    //   time: \"12:00p\",\n    // },\n  ]);\n\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n\n  function addContact(name, phone, email) {\n    setContacts([...contacts, {\n      name: name\n    }]);\n  }\n  function addAppointment(name, contact, date, time) {\n    setAppointments([...appointments, appointment]);\n  }\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 32\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        addContact: addContact,\n        contacts: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        addAppointment: addAppointment,\n        appointments: appointments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"9ZIgWfxFUgPIy088GdRlW/i7CnE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["getDefaultNormalizer","React","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","appointments","setAppointments","addContact","name","phone","email","addAppointment","contact","date","time","appointment","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","APPOINTMENTS","_c","$RefreshReg$"],"sources":["/Users/kailaburgin/Development/test/src/App.js"],"sourcesContent":["import { getDefaultNormalizer } from \"@testing-library/react\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  RouterProvider,\r\n  createBrowserRouter,\r\n  createRoutesFromElements,\r\n  Route,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n\r\n  //below is the state variable for contacts\r\n  const [contacts, setContacts] = useState([\r\n    // {\r\n    //   id: 1,\r\n    //   name: \"Bob Smith\",\r\n    //   phone: 5551234567,\r\n    //   email: \"bobsmith@gmail.com\",\r\n    // },\r\n    // {\r\n    //   id: 2,\r\n    //   name: \"Jane Doe\",\r\n    //   phone: 5552345678,\r\n    //   email: \"janedoe@gmail.com\",\r\n    // },\r\n    // {\r\n    //   id: 3,\r\n    //   name: \"John Test\",\r\n    //   phone: 5553456789,\r\n    //   email: \"johntest@gmail.com\",\r\n    // },\r\n  ]);\r\n\r\n  //below is the state variable for appointments\r\n  const [appointments, setAppointments] = useState([\r\n    // {\r\n    //   id: 1,\r\n    //   name: \"Bob Smith\",\r\n    //   phone: 5551234567,\r\n    //   email: \"bobsmith@gmail.com\",\r\n    //   date: \"03/18/3024\",\r\n    //   time: \"2:00p\",\r\n    // },\r\n    // {\r\n    //   id: 2,\r\n    //   name: \"Jane Doe\",\r\n    //   phone: 5552345678,\r\n    //   email: \"janedoe@gmail.com\",\r\n    //   date: \"03/20/3024\",\r\n    //   time: \"1:00p\",\r\n    // },\r\n    // {\r\n    //   id: 3,\r\n    //   name: \"John Test\",\r\n    //   phone: 5553456789,\r\n    //   email: \"johntest@gmail.com\",\r\n    //   date: \"03/22/3024\",\r\n    //   time: \"12:00p\",\r\n    // },\r\n  ]);\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\n  function addContact(name, phone, email) {\r\n    setContacts([...contacts, {\r\n      name: name, \r\n      \r\n    }]);\r\n  }\r\n\r\n  function addAppointment(name, contact, date, time) {\r\n    setAppointments([...appointments, appointment]);\r\n  }\r\n\r\n  const router = createBrowserRouter(\r\n    createRoutesFromElements(\r\n      <Route path=\"/\" element={<Root />}>\r\n        <Route index element={<Navigate to={ROUTES.CONTACTS} replace />} />\r\n        <Route\r\n          path={ROUTES.CONTACTS}\r\n          element={\r\n            <ContactsPage\r\n              addContact={addContact}\r\n              contacts={contacts}\r\n            /> /* Add props to ContactsPage */\r\n          }\r\n        />\r\n        <Route\r\n          path={ROUTES.APPOINTMENTS}\r\n          element={\r\n            <AppointmentsPage\r\n              addAppointment={addAppointment}\r\n              appointments={appointments}\r\n            /> /* Add props to AppointmentsPage */\r\n          }\r\n        />\r\n      </Route>\r\n    )\r\n  );\r\n\r\n  return <RouterProvider router={router} />;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}