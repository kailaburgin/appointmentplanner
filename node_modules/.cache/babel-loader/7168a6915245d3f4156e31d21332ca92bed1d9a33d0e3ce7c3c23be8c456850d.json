{"ast":null,"code":"var _jsxFileName = \"/Users/kailaburgin/Development/appointmentplanner/src/App.js\",\n  _s = $RefreshSig$();\nimport { getDefaultNormalizer } from \"@testing-library/react\";\nimport React, { useState } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  //below will set the array of contacts\n  const [contacts, setContacts] = useState([{\n    id: 1,\n    firstName: \"Bob\",\n    lastName: \"Smith\",\n    phone: 5551234567,\n    email: \"bobsmith@gmail.com\"\n  }, {\n    id: 2,\n    firstName: \"Jane\",\n    lastName: \"Doe\",\n    phone: 5552345678,\n    email: \"janedoe@gmail.com\"\n  }, {\n    id: 1,\n    firstName: \"John\",\n    lastName: \"Test\",\n    phone: 5553456789,\n    email: \"johntest@gmail.com\"\n  }]);\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 32\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"Yx9GzUqlrGBuH2J5v/4xkHKPamQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["getDefaultNormalizer","React","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","id","firstName","lastName","phone","email","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","APPOINTMENTS","_c","$RefreshReg$"],"sources":["/Users/kailaburgin/Development/appointmentplanner/src/App.js"],"sourcesContent":["import { getDefaultNormalizer } from \"@testing-library/react\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  RouterProvider,\r\n  createBrowserRouter,\r\n  createRoutesFromElements,\r\n  Route,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n //below will set the array of contacts\r\n  const [contacts, setContacts] = useState([\r\n    {\r\n      id: 1,\r\n      firstName: \"Bob\",\r\n      lastName: \"Smith\",\r\n      phone: 5551234567,\r\n      email: \"bobsmith@gmail.com\",\r\n    },\r\n    {\r\n      id: 2,\r\n      firstName: \"Jane\",\r\n      lastName: \"Doe\",\r\n      phone: 5552345678,\r\n      email: \"janedoe@gmail.com\",\r\n    },\r\n    {\r\n      id: 1,\r\n      firstName: \"John\",\r\n      lastName: \"Test\",\r\n      phone: 5553456789,\r\n      email: \"johntest@gmail.com\",\r\n    },\r\n  ]);\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\n  const router = createBrowserRouter(\r\n    createRoutesFromElements(\r\n      <Route path=\"/\" element={<Root />}>\r\n        <Route index element={<Navigate to={ROUTES.CONTACTS} replace />} />\r\n        <Route\r\n          path={ROUTES.CONTACTS}\r\n          element={<ContactsPage /> /* Add props to ContactsPage */}\r\n        />\r\n        <Route\r\n          path={ROUTES.APPOINTMENTS}\r\n          element={<AppointmentsPage /> /* Add props to AppointmentsPage */}\r\n        />\r\n      </Route>\r\n    )\r\n  );\r\n\r\n  return <RouterProvider router={router} />;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,oBAAoB,QAAQ,wBAAwB;AAC7D,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,cAAc,EACdC,mBAAmB,EACnBC,wBAAwB,EACxBC,KAAK,EACLC,QAAQ,QACH,kBAAkB;AACzB,OAAOC,IAAI,IAAIC,MAAM,QAAQ,wBAAwB;AACrD,SAASC,gBAAgB,QAAQ,gDAAgD;AACjF,SAASC,YAAY,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;AACF;AACA;AACA;EACC;EACC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,CACvC;IACEgB,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE,OAAO;IACjBC,KAAK,EAAE,UAAU;IACjBC,KAAK,EAAE;EACT,CAAC,EACD;IACEJ,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE,UAAU;IACjBC,KAAK,EAAE;EACT,CAAC,EACD;IACEJ,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE,UAAU;IACjBC,KAAK,EAAE;EACT,CAAC,CACF,CAAC;EACF;AACF;AACA;AACA;;EAEE,MAAMC,MAAM,GAAGnB,mBAAmB,CAChCC,wBAAwB,eACtBQ,OAAA,CAACP,KAAK;IAACkB,IAAI,EAAC,GAAG;IAACC,OAAO,eAAEZ,OAAA,CAACL,IAAI;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;IAAAC,QAAA,gBAChCjB,OAAA,CAACP,KAAK;MAACyB,KAAK;MAACN,OAAO,eAAEZ,OAAA,CAACN,QAAQ;QAACyB,EAAE,EAAEvB,MAAM,CAACwB,QAAS;QAACC,OAAO;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACnEhB,OAAA,CAACP,KAAK;MACJkB,IAAI,EAAEf,MAAM,CAACwB,QAAS;MACtBR,OAAO,eAAEZ,OAAA,CAACF,YAAY;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,CAAC;IAAgC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1D,eACFhB,OAAA,CAACP,KAAK;MACJkB,IAAI,EAAEf,MAAM,CAAC0B,YAAa;MAC1BV,OAAO,eAAEZ,OAAA,CAACH,gBAAgB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,CAAC;IAAoC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI,CACT,CACF;EAED,oBAAOhB,OAAA,CAACV,cAAc;IAACoB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC3C;AAACd,EAAA,CAnDQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}